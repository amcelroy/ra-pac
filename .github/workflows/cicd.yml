name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_format_check:
    name: Build Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rustup
        run: |
          sudo apt-get update
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable
          echo "export PATH=\$HOME/.cargo/bin:\$PATH:/usr/bin" >> $GITHUB_ENV
        shell: bash

      - name: Rust Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Setup Rust Environment
        run: |
          rustup component add rustfmt
          rustup component add clippy
          rustup target add thumbv6m-none-eabi
          rustup target add thumbv7em-none-eabihf
          rustup target add thumbv8m.base-none-eabi
          rustup target add thumbv8m.main-none-eabihf
        shell: bash

      # RA0 Series (Cortex-M23)
      - name: Build for ra0e1-pac
        id: build-ra0e1
        run: cd pac/ra0e1-pac && cargo build --target thumbv8m.base-none-eabi && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra0e1-pac
        if: steps.build-ra0e1.outcome == 'success'
        run: cd pac/ra0e1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra0e1-pac
        if: steps.build-ra0e1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra0e1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      # RA2 Series (Cortex-M23)
      - name: Build for ra2a1-pac
        id: build-ra2a1
        run: cd pac/ra2a1-pac && cargo build --target thumbv8m.base-none-eabi && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra2a1-pac
        if: steps.build-ra2a1.outcome == 'success'
        run: cd pac/ra2a1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra2a1-pac
        if: steps.build-ra2a1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra2a1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra2a2-pac
        id: build-ra2a2
        run: cd pac/ra2a2-pac && cargo build --target thumbv8m.base-none-eabi && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra2a2-pac
        if: steps.build-ra2a2.outcome == 'success'
        run: cd pac/ra2a2-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra2a2-pac
        if: steps.build-ra2a2.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra2a2-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra2e1-pac
        id: build-ra2e1
        run: cd pac/ra2e1-pac && cargo build --target thumbv8m.base-none-eabi && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra2e1-pac
        if: steps.build-ra2e1.outcome == 'success'
        run: cd pac/ra2e1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra2e1-pac
        if: steps.build-ra2e1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra2e1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra2e2-pac
        id: build-ra2e2
        run: cd pac/ra2e2-pac && cargo build --target thumbv8m.base-none-eabi && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra2e2-pac
        if: steps.build-ra2e2.outcome == 'success'
        run: cd pac/ra2e2-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra2e2-pac
        if: steps.build-ra2e2.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra2e2-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra2e3-pac
        id: build-ra2e3
        run: cd pac/ra2e3-pac && cargo build --target thumbv8m.base-none-eabi && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra2e3-pac
        if: steps.build-ra2e3.outcome == 'success'
        run: cd pac/ra2e3-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra2e3-pac
        if: steps.build-ra2e3.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra2e3-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra2l1-pac
        id: build-ra2l1
        run: cd pac/ra2l1-pac && cargo build --target thumbv8m.base-none-eabi && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra2l1-pac
        if: steps.build-ra2l1.outcome == 'success'
        run: cd pac/ra2l1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra2l1-pac
        if: steps.build-ra2l1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra2l1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      # RA4 Series (Cortex-M4 and Cortex-M33)
      - name: Build for ra4e1-pac
        id: build-ra4e1
        run: cd pac/ra4e1-pac && cargo build --target thumbv8m.main-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra4e1-pac
        if: steps.build-ra4e1.outcome == 'success'
        run: cd pac/ra4e1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra4e1-pac
        if: steps.build-ra4e1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra4e1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra4e2-pac
        id: build-ra4e2
        run: cd pac/ra4e2-pac && cargo build --target thumbv8m.main-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra4e2-pac
        if: steps.build-ra4e2.outcome == 'success'
        run: cd pac/ra4e2-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra4e2-pac
        if: steps.build-ra4e2.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra4e2-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra4l1-pac
        id: build-ra4l1
        run: cd pac/ra4l1-pac && cargo build --target thumbv8m.main-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra4l1-pac
        if: steps.build-ra4l1.outcome == 'success'
        run: cd pac/ra4l1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra4l1-pac
        if: steps.build-ra4l1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra4l1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra4m1-pac
        id: build-ra4m1
        run: cd pac/ra4m1-pac && cargo build --target thumbv7em-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra4m1-pac
        if: steps.build-ra4m1.outcome == 'success'
        run: cd pac/ra4m1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra4m1-pac
        if: steps.build-ra4m1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra4m1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra4m2-pac
        id: build-ra4m2
        run: cd pac/ra4m2-pac && cargo build --target thumbv7em-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra4m2-pac
        if: steps.build-ra4m2.outcome == 'success'
        run: cd pac/ra4m2-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra4m2-pac
        if: steps.build-ra4m2.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra4m2-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra4m3-pac
        id: build-ra4m3
        run: cd pac/ra4m3-pac && cargo build --target thumbv7em-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra4m3-pac
        if: steps.build-ra4m3.outcome == 'success'
        run: cd pac/ra4m3-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra4m3-pac
        if: steps.build-ra4m3.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra4m3-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra4t1-pac
        id: build-ra4t1
        run: cd pac/ra4t1-pac && cargo build --target thumbv8m.main-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra4t1-pac
        if: steps.build-ra4t1.outcome == 'success'
        run: cd pac/ra4t1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra4t1-pac
        if: steps.build-ra4t1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra4t1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra4w1-pac
        id: build-ra4w1
        run: cd pac/ra4w1-pac && cargo build --target thumbv7em-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra4w1-pac
        if: steps.build-ra4w1.outcome == 'success'
        run: cd pac/ra4w1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra4w1-pac
        if: steps.build-ra4w1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra4w1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      # RA6 Series (Cortex-M4 and Cortex-M33)
      - name: Build for ra6e1-pac
        id: build-ra6e1
        run: cd pac/ra6e1-pac && cargo build --target thumbv8m.main-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra6e1-pac
        if: steps.build-ra6e1.outcome == 'success'
        run: cd pac/ra6e1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra6e1-pac
        if: steps.build-ra6e1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra6e1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra6e2-pac
        id: build-ra6e2
        run: cd pac/ra6e2-pac && cargo build --target thumbv8m.main-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra6e2-pac
        if: steps.build-ra6e2.outcome == 'success'
        run: cd pac/ra6e2-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra6e2-pac
        if: steps.build-ra6e2.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra6e2-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra6m1-pac
        id: build-ra6m1
        run: cd pac/ra6m1-pac && cargo build --target thumbv7em-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra6m1-pac
        if: steps.build-ra6m1.outcome == 'success'
        run: cd pac/ra6m1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra6m1-pac
        if: steps.build-ra6m1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra6m1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra6m2-pac
        id: build-ra6m2
        run: cd pac/ra6m2-pac && cargo build --target thumbv7em-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra6m2-pac
        if: steps.build-ra6m2.outcome == 'success'
        run: cd pac/ra6m2-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra6m2-pac
        if: steps.build-ra6m2.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra6m2-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra6m3-pac
        id: build-ra6m3
        run: cd pac/ra6m3-pac && cargo build --target thumbv7em-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra6m3-pac
        if: steps.build-ra6m3.outcome == 'success'
        run: cd pac/ra6m3-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra6m3-pac
        if: steps.build-ra6m3.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra6m3-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra6m4-pac
        id: build-ra6m4
        run: cd pac/ra6m4-pac && cargo build --target thumbv8m.main-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra6m4-pac
        if: steps.build-ra6m4.outcome == 'success'
        run: cd pac/ra6m4-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra6m4-pac
        if: steps.build-ra6m4.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra6m4-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra6m5-pac
        id: build-ra6m5
        run: cd pac/ra6m5-pac && cargo build --target thumbv8m.main-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra6m5-pac
        if: steps.build-ra6m5.outcome == 'success'
        run: cd pac/ra6m5-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra6m5-pac
        if: steps.build-ra6m5.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra6m5-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra6t1-pac
        id: build-ra6t1
        run: cd pac/ra6t1-pac && cargo build --target thumbv7em-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra6t1-pac
        if: steps.build-ra6t1.outcome == 'success'
        run: cd pac/ra6t1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra6t1-pac
        if: steps.build-ra6t1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra6t1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra6t2-pac
        id: build-ra6t2
        run: cd pac/ra6t2-pac && cargo build --target thumbv7em-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra6t2-pac
        if: steps.build-ra6t2.outcome == 'success'
        run: cd pac/ra6t2-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra6t2-pac
        if: steps.build-ra6t2.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra6t2-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra6t3-pac
        id: build-ra6t3
        run: cd pac/ra6t3-pac && cargo build --target thumbv7em-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra6t3-pac
        if: steps.build-ra6t3.outcome == 'success'
        run: cd pac/ra6t3-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra6t3-pac
        if: steps.build-ra6t3.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra6t3-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      # RA8 Series (Cortex-M33)
      - name: Build for ra8d1-pac
        id: build-ra8d1
        run: cd pac/ra8d1-pac && cargo build --target thumbv8m.main-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra8d1-pac
        if: steps.build-ra8d1.outcome == 'success'
        run: cd pac/ra8d1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra8d1-pac
        if: steps.build-ra8d1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra8d1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra8e1-pac
        id: build-ra8e1
        run: cd pac/ra8e1-pac && cargo build --target thumbv8m.main-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra8e1-pac
        if: steps.build-ra8e1.outcome == 'success'
        run: cd pac/ra8e1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra8e1-pac
        if: steps.build-ra8e1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra8e1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra8e2-pac
        id: build-ra8e2
        run: cd pac/ra8e2-pac && cargo build --target thumbv8m.main-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra8e2-pac
        if: steps.build-ra8e2.outcome == 'success'
        run: cd pac/ra8e2-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra8e2-pac
        if: steps.build-ra8e2.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra8e2-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true

      - name: Build for ra8m1-pac
        id: build-ra8m1
        run: cd pac/ra8m1-pac && cargo build --target thumbv8m.main-none-eabihf && cargo fmt --all -- --check
        continue-on-error: true

      - name: Build docs for ra8m1-pac
        if: steps.build-ra8m1.outcome == 'success'
        run: cd pac/ra8m1-pac && cargo doc --no-deps
        continue-on-error: true

      - name: Publish ra8m1-pac
        if: steps.build-ra8m1.outcome == 'success' && github.ref == 'refs/heads/main'
        run: cd pac/ra8m1-pac && cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true
